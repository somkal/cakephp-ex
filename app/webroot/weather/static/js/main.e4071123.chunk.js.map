{"version":3,"sources":["components/locations.js","components/today.js","components/weekly.js","components/forecast.js","App.js","reportWebVitals.js","index.js"],"names":["Favorites","props","toggleEditMode","setState","prevState","editMode","setSearchInput","event","searchInput","target","value","addLocation","url","si","state","length","parseInt","console","log","fetch","then","res","json","result","name","address","city","display_name","split","lat","parseFloat","toFixed","lng","lon","geo","l","hfurl","properties","forecastHourly","dfurl","forecast","loc","locations","push","localStorage","setItem","JSON","stringify","deleteLocation","splice","showForecast","onTabChange","onLocChange","bind","parse","getItem","Container","className","Row","Col","src","alt","xs","sm","style","display","justifyContent","Button","onClick","this","ListGroup","map","index","Item","variant","md","InputGroup","FormControl","type","placeholder","onChange","onKeyPress","key","React","Component","minner","a","b","temperature","maxxer","dateFilter","x","Date","startTime","getDate","Today","isLoaded","now","hours","periods","td","filter","data","tmin","reduce","tmax","slice","content","icon","shortForecast","windSpeed","windDirection","Spinner","animation","role","fluid","hour","lg","toLocaleString","hour12","slots","slot","height","day","month","temperatureUnit","detailedForecast","Forecast","showLocations","Tabs","id","activeKey","mountOnEnter","onSelect","Tab","eventKey","title","App","handleSetLoc","newLoc","handleSetTab","newTab","tab","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4071123.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, Row, Col, ListGroup, Button, InputGroup, FormControl } from \"react-bootstrap\";\n\n// move to config later\nconst GEOCODE_URL = \"https://nominatim.openstreetmap.org/search?limit=1&format=json&addressdetails=1&country=US\";\nconst NOAAPOINT_URL = \"https://api.weather.gov/points/\";\n\nexport default class Favorites extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.setSearchInput = this.setSearchInput.bind(this);\n    this.deleteLocation = this.deleteLocation.bind(this);\n    this.showForecast = this.showForecast.bind(this);\n\n    let loc = JSON.parse(localStorage.getItem('locations')) || [];\n    this.state = {\n      searchInput: \"\",\n      locations: loc,\n      editMode: (loc.length > 0) ? false : true\n    }\n  }\n\n  toggleEditMode = () => {\n    this.setState(prevState => ({\n      editMode: !prevState.editMode\n    }));\n  }\n\n  setSearchInput = event => {\n    this.setState({ searchInput: event.target.value });\n  }\n\n  addLocation = () => {\n    let url = GEOCODE_URL;\n    let si = this.state.searchInput;\n\n    if (si.length === 5 && parseInt(si) > 0) {\n      // use postcode search\n      url += \"&postalcode=\" + si;\n    } else if (si.length > 2) {\n      // use address or airport codes lookup\n      url += \"&q=\" + si;\n    } else {\n      return;\n    }\n\n    console.log(url);\n    let geocode = fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          if (result.length > 0) {\n            return {\n              name: result[0].address.city || \n                    result[0].display_name.split(\",\")[0],\n              lat: parseFloat(result[0].lat).toFixed(6),\n              lng: parseFloat(result[0].lon).toFixed(6)\n            }\n          }\n          return {};\n        }\n      )\n\n    geocode.then(geo => {\n      if (geo !== {}) {\n        let url = NOAAPOINT_URL + geo.lat + \",\" + geo.lng;\n        console.log(url);\n        fetch(url)\n          .then(res => res.json())\n          .then(\n            (result) => {\n              let l = {\n                name: geo.name,\n                lat: parseFloat(geo.lat),\n                lng: parseFloat(geo.lng),\n                hfurl: result.properties.forecastHourly,\n                dfurl: result.properties.forecast\n              }\n              let loc = this.state.locations;\n              loc.push(l);\n              this.setState(\n                { locations: loc, searchInput: \"\" },\n                localStorage.setItem(\"locations\", JSON.stringify(loc))\n              );\n            }\n          )\n      }\n    })\n  }\n\n  deleteLocation = (event) => {\n    let loc = this.state.locations;\n    if (event.target.value !== -1) {\n      loc.splice(event.target.value, 1);\n      this.setState(\n        { locations: loc },\n        localStorage.setItem(\"locations\", JSON.stringify(loc))\n      );\n    }\n  }\n\n  showForecast = (event) => {\n    this.props.onTabChange(\"forecast\");\n    let loc = this.state.locations[event.target.value];\n    this.props.onLocChange(loc);\n  }\n\n  render() {\n    return (\n      <Container className=\"pl-1 pr-1\">\n        <Row className=\"mt-3 mb-2\">\n          <Col className=\"mt-2\">\n            <img className=\"today-logo\" src=\"logo.png\" alt=\"weather-logo\" />\n            <strong>Weather</strong>\n          </Col>\n          <Col xs={3} sm={2} style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Button onClick={this.toggleEditMode}>+/-</Button>\n          </Col>\n        </Row>\n        <hr />\n        <Row>\n          <ListGroup>\n            {this.state.locations.map((loc, index) => (\n              <ListGroup.Item key={index} className=\"row-striped\">\n                <Row>\n                  <Col className={`${this.state.editMode ? \"\" : \"d-none\"}`}>\n                    <Button variant=\"danger\" value={index}\n                      onClick={this.deleteLocation}>\n                      X\n                    </Button>\n                  </Col>\n                  <Col xs={6} sm={8} md={10}>\n                    <strong>{loc.name}</strong>\n                  </Col>\n                  <Col style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                    <Button value={index}\n                      onClick={this.showForecast}>&gt;</Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n          <InputGroup className={`mt-3 ${this.state.editMode ? \"\" : \"d-none\"}`}>\n            <FormControl\n              type=\"text\"\n              placeholder=\"ZIP Code or US Address\"\n              value={this.state.searchInput}\n              onChange={this.setSearchInput}\n              onKeyPress={event => {\n                if (event.key === \"Enter\") {\n                  this.addLocation();\n                }\n              }}\n            />\n            <Button onClick={this.addLocation}>+</Button>\n          </InputGroup>\n        </Row>\n      </Container>\n    )\n  }\n}\n\n","import React from \"react\";\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\n\nconst minner = (a, b) => ({ temperature: (a.temperature < b.temperature) ? a.temperature : b.temperature });\nconst maxxer = (a, b) => ({ temperature: (a.temperature > b.temperature) ? a.temperature : b.temperature });\nconst dateFilter = (x) => new Date(x.startTime).getDate() === new Date().getDate();\n\nexport default class Today extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      now: {},\n      hours: []\n    }\n  }\n\n  componentDidMount() {\n    const url = this.props.loc.hfurl;\n    console.log(url);\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          let periods = result.properties.periods;\n          let td = periods.filter(dateFilter);\n          this.setState({\n            now: {\n              data: periods[0],\n              tmin: td.reduce(minner).temperature,\n              tmax: td.reduce(maxxer).temperature\n            },\n            hours: periods.slice(0,24),\n            isLoaded: true\n          });\n        }\n      )\n  }\n\n  render() {\n    const isLoaded = this.state.isLoaded;\n    let content;\n    if (!isLoaded) {\n      content = <Spinner animation=\"border\" role=\"status\"></Spinner>\n    } else {\n      content = <Container>\n        <Row className=\"mt-2\">\n          <Col className=\"text-center today-box\">\n            <img className=\"today-icon\"\n              src={this.state.now.data.icon}\n              alt={this.state.now.data.shortForecast} />\n            <span className=\"today-temp\">\n              &nbsp;{this.state.now.data.temperature}&deg;\n            </span>\n          </Col>\n        </Row>\n        <Row className=\"mt-2 mb-2 text-center\">\n          <Col xs={12} sm={4}>\n            <small>\n              H: {this.state.now.tmax}&deg;\n              &nbsp;\n              L: {this.state.now.tmin}&deg;\n            </small>\n          </Col>\n          <Col xs={12} sm={4}>\n            {this.state.now.data.shortForecast}\n          </Col>\n          <Col xs={12} sm={4}>\n            <small className=\"text-muted\">\n              Wind&nbsp;\n              {this.state.now.data.windSpeed} {this.state.now.data.windDirection}\n            </small>\n          </Col>\n        </Row>\n      </Container>\n    }\n\n    return (\n      <Container fluid>\n        {content}\n        <Row className=\"mt-4\">\n          <Col className=\"mt-4\">Next 24 Hour Forecast</Col>\n        </Row>\n        <hr />\n        <Row className=\"mt-2\">\n          {this.state.hours.map((hour, index) => (\n            <Col xs={3} sm={2} lg={1} key={index}>\n              <Row className=\"mt-4\">\n                <small className=\"text-muted\">\n                  {new Date(hour.startTime).toLocaleString('en-US', { hour: 'numeric', hour12: true })}\n                </small>\n              </Row>\n              <Row>\n                <span>\n                  <strong>{hour.temperature}&deg;</strong>\n                </span>\n              </Row>\n            </Col>\n          ))}\n        </Row>\n      </Container>\n    )\n  }\n}\n","import React from \"react\";\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\n\nexport default class Today extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      slots: []\n    }\n  }\n\n  componentDidMount() {\n    const url = this.props.loc.dfurl;\n    console.log(url);\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          let periods = result.properties.periods;\n          this.setState({ \n            slots: periods.slice(0,14),\n            isLoaded: true\n          });\n        }\n      )\n  }\n\n  render() {\n    const isLoaded = this.state.isLoaded;\n    let content;\n    if (!isLoaded) {\n      content = <Spinner animation=\"border\" role=\"status\"></Spinner>\n    }\n\n    return (\n      <Container className=\"pl-1 pr-1\">\n        {content}\n        {this.state.slots.map((slot, index) => (\n          <Row key={index} className=\"pt-2 pb-2 row-striped\">\n            <Col xs={4} sm={3} md={2}>\n              <img src={slot.icon} alt={slot.shortForecast} height=\"60px\" />\n            </Col>\n            <Col>\n              <strong>\n                {new Date(slot.startTime).toLocaleString('en-US', { day: 'numeric', month: 'numeric' })}\n              </strong>\n              <br />\n              <small>{slot.name}</small>\n            </Col>\n            <Col xs={12} sm={6}>\n              <Row>\n                <Col xs={4}>\n                  {slot.temperature}&deg;{slot.temperatureUnit}\n                </Col>\n                <Col>\n                  <small>{slot.windSpeed} {slot.windDirection}</small>\n                </Col>\n              </Row>\n              <Row>\n                <small>\n                  <small>\n                    {/* {slot.shortForecast} <br />*/}\n                    {slot.detailedForecast}\n                  </small>\n                </small>\n              </Row>\n            </Col>\n          </Row>\n        ))}\n      </Container>\n    )\n  }\n}\n","import React from \"react\";\nimport { Tabs, Tab, Button, Container, Row, Col } from \"react-bootstrap\";\n\n// weather-app components\nimport Today from \"./today\"\nimport Weekly from \"./weekly\"\n\nexport default class Forecast extends React.Component {\n  constructor(props) {\n    super(props);\n    this.showLocations = this.showLocations.bind(this);\n    this.state = {\n      key: \"today\",\n      loc: this.props.loc\n    };\n  }\n\n  showLocations = () => {\n    this.props.onTabChange(\"home\");\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"mt-3 mb-3\">\n          <Col>\n            <h1>{this.state.loc.name}</h1>\n          </Col>\n          <Col xs={2} style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Button variant=\"danger\"\n              onClick={this.showLocations}>\n              X\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Tabs id=\"weather-forecast-tabs\"\n            activeKey={this.state.key}\n            mountOnEnter={true}\n            onSelect={key => this.setState({ key })}\n          >\n            <Tab eventKey=\"today\" title=\"Today's Weather\">\n                <Today loc={this.state.loc}></Today>\n            </Tab>\n            <Tab eventKey=\"weekly\" title=\"Next 7 Days\">\n                <Weekly loc={this.state.loc}></Weekly>\n            </Tab>\n          </Tabs>\n        </Row>\n      </Container>\n    )\n  }\n}\n","import './App.css';\nimport  React  from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nimport Locations from \"./components/locations\";\nimport Forecast from \"./components/forecast\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSetLoc = this.handleSetLoc.bind(this);\n    this.handleSetTab = this.handleSetTab.bind(this);\n    this.state = {\n      tab: 'home',\n      loc: {}\n    }\n  }\n\n  handleSetLoc = newLoc => {\n    this.setState({loc: newLoc});\n  }\n\n  handleSetTab = newTab => {\n    this.setState({tab: newTab});\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        {this.state.tab === 'forecast' && (\n          <Forecast loc={this.state.loc} \n            onTabChange={this.handleSetTab} />\n        )}\n  \n        {this.state.tab !== 'forecast' && (\n          <Locations \n            onLocChange={this.handleSetLoc}\n            onTabChange={this.handleSetTab} />\n        )}\n      </Container>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}